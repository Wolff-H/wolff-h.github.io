import{d as m,B as d,o as r,b as p,w as u,G as l,_ as h,j as s,a,c as g,aJ as k}from"./chunks/framework.etEQwTBT.js";const E=m({__name:"basic-usage",setup(o){return(t,n)=>{const i=d("formatted-value"),e=d("c-showcase-box");return r(),p(e,{path:"formatted-value/basic-usage"},{default:u(()=>[l(i,{number:3.1415926})]),_:1})}}}),f={};function y(o,t){const n=d("formatted-value"),i=d("c-showcase-box");return r(),p(i,{path:"formatted-value/directional"},{default:u(()=>[t[0]||(t[0]=s("span",{style:{"margin-right":"20px"}},"正方向",-1)),l(n,{number:3.1415926,directional:""}),t[1]||(t[1]=s("br",null,null,-1)),t[2]||(t[2]=s("span",{style:{"margin-right":"20px"}},"无方向",-1)),l(n,{number:3.1415926}),t[3]||(t[3]=s("br",null,null,-1)),t[4]||(t[4]=s("span",{style:{"margin-right":"20px"}},"负方向",-1)),l(n,{number:-3.1415926,directional:""}),t[5]||(t[5]=s("br",null,null,-1))]),_:1})}const F=h(f,[["render",y]]),v={};function x(o,t){const n=d("formatted-value"),i=d("c-showcase-box");return r(),p(i,{path:"formatted-value/postive-sign"},{default:u(()=>[t[0]||(t[0]=s("span",{style:{"margin-right":"20px"}},"正值",-1)),l(n,{number:3.1415926,"positive-sign":""}),t[1]||(t[1]=s("br",null,null,-1)),t[2]||(t[2]=s("span",{style:{"margin-right":"20px"}},"负值",-1)),l(n,{number:-3.1415926,"positive-sign":""}),t[3]||(t[3]=s("br",null,null,-1))]),_:1})}const C=h(v,[["render",x]]),B={};function w(o,t){const n=d("formatted-value"),i=d("c-showcase-box");return r(),p(i,{path:"formatted-value/sign-vector"},{default:u(()=>[t[0]||(t[0]=s("span",{style:{"margin-right":"20px"}},"正值",-1)),l(n,{number:3.1415926,directional:"","positive-sign":""}),t[1]||(t[1]=s("br",null,null,-1)),t[2]||(t[2]=s("span",{style:{"margin-right":"20px"}},"负值",-1)),l(n,{number:-3.1415926,directional:"","positive-sign":""}),t[3]||(t[3]=s("br",null,null,-1))]),_:1})}const q=h(B,[["render",w]]),A={};function P(o,t){const n=d("formatted-value"),i=d("c-showcase-box");return r(),p(i,{path:"formatted-value/no-sign"},{default:u(()=>[t[0]||(t[0]=s("span",{style:{"margin-right":"20px"}},"正值",-1)),l(n,{number:3.1415926,sign:!1}),t[1]||(t[1]=s("br",null,null,-1)),t[2]||(t[2]=s("span",{style:{"margin-right":"20px"}},"零值",-1)),l(n,{number:0,sign:!1}),t[3]||(t[3]=s("br",null,null,-1)),t[4]||(t[4]=s("span",{style:{"margin-right":"20px"}},"负值",-1)),l(n,{number:-3.1415926,sign:!1}),t[5]||(t[5]=s("br",null,null,-1)),t[6]||(t[6]=s("br",null,null,-1)),t[7]||(t[7]=s("span",{style:{"margin-right":"20px"}},"正值向量",-1)),l(n,{number:3.1415926,directional:"",sign:!1}),t[8]||(t[8]=s("br",null,null,-1)),t[9]||(t[9]=s("span",{style:{"margin-right":"20px"}},"零值向量",-1)),l(n,{number:0,sign:!1}),t[10]||(t[10]=s("br",null,null,-1)),t[11]||(t[11]=s("span",{style:{"margin-right":"20px"}},"负值向量",-1)),l(n,{number:-3.1415926,directional:"",sign:!1}),t[12]||(t[12]=s("br",null,null,-1))]),_:1})}const S=h(A,[["render",P]]),D={};function T(o,t){const n=d("formatted-value"),i=d("c-showcase-box");return r(),p(i,{path:"formatted-value/thousands-separator"},{default:u(()=>[l(n,{number:3.1415926,"thousands-separator":""}),t[0]||(t[0]=s("br",null,null,-1)),l(n,{number:12345678901231416e-4,"thousands-separator":""})]),_:1})}const V=h(D,[["render",T]]),$={};function N(o,t){const n=d("formatted-value"),i=d("c-showcase-box");return r(),p(i,{path:"formatted-value/percentage"},{default:u(()=>[t[0]||(t[0]=a(" 【非良定义的数值格式化选项】 ")),t[1]||(t[1]=s("br",null,null,-1)),l(n,{number:3.1415926,percentage:""}),t[2]||(t[2]=s("br",null,null,-1)),l(n,{number:67,percentage:""}),t[3]||(t[3]=s("br",null,null,-1)),t[4]||(t[4]=s("br",null,null,-1)),t[5]||(t[5]=a(" 【良定义的数值格式化选项】 ")),t[6]||(t[6]=s("br",null,null,-1)),l(n,{number:3.1415926,percentage:"",decimals:2}),t[7]||(t[7]=s("br",null,null,-1)),l(n,{number:67,percentage:"",decimals:0})]),_:1})}const I=h($,[["render",N]]),R={};function M(o,t){const n=d("formatted-value"),i=d("c-showcase-box");return r(),p(i,{path:"formatted-value/decimals"},{default:u(()=>[t[0]||(t[0]=s("span",{style:{display:"inline-block","min-width":"120px"}},"原始值",-1)),l(n,{number:3.1415926}),t[1]||(t[1]=s("br",null,null,-1)),t[2]||(t[2]=s("br",null,null,-1)),t[3]||(t[3]=a(" 【保留位数】 ")),t[4]||(t[4]=s("br",null,null,-1)),t[5]||(t[5]=s("span",{style:{display:"inline-block","min-width":"120px"}},"1位",-1)),l(n,{number:3.1415926,decimals:1}),t[6]||(t[6]=s("br",null,null,-1)),t[7]||(t[7]=s("span",{style:{display:"inline-block","min-width":"120px"}},"2位",-1)),l(n,{number:3.1415926,decimals:2}),t[8]||(t[8]=s("br",null,null,-1)),t[9]||(t[9]=s("span",{style:{display:"inline-block","min-width":"120px"}},"3位",-1)),l(n,{number:3.1415926,decimals:3}),t[10]||(t[10]=s("br",null,null,-1)),t[11]||(t[11]=s("br",null,null,-1)),t[12]||(t[12]=a(" 【精度算法】 ")),t[13]||(t[13]=s("br",null,null,-1)),t[14]||(t[14]=s("span",{style:{display:"inline-block","min-width":"120px"}},"round（默认）",-1)),l(n,{number:3.1415926,decimals:2}),t[15]||(t[15]=s("br",null,null,-1)),t[16]||(t[16]=s("span",{style:{display:"inline-block","min-width":"120px"}},"floor",-1)),l(n,{number:3.1415926,decimals:[2,"floor"]}),t[17]||(t[17]=s("br",null,null,-1)),t[18]||(t[18]=s("span",{style:{display:"inline-block","min-width":"120px"}},"ceil",-1)),l(n,{number:3.1415926,decimals:[2,"ceil"]})]),_:1})}const O=h(R,[["render",M]]),j={};function z(o,t){const n=d("formatted-value"),i=d("c-showcase-box");return r(),p(i,{path:"formatted-value/title"},{default:u(()=>[l(n,{number:3.1415926,decimals:2,titled:""})]),_:1})}const H=h(j,[["render",z]]),J={};function W(o,t){const n=d("formatted-value"),i=d("c-showcase-box");return r(),p(i,{path:"formatted-value/order-of-magnitude"},{default:u(()=>[t[0]||(t[0]=a(" 【降级转换：原始值 → 换算值】")),t[1]||(t[1]=s("br",null,null,-1)),t[2]||(t[2]=s("span",{style:{display:"inline-block","min-width":"120px"}},"万",-1)),l(n,{number:31415926535}),t[3]||(t[3]=a(" → ")),l(n,{number:31415926535,"order-of-magnitude":[4]}),t[4]||(t[4]=s("br",null,null,-1)),t[5]||(t[5]=s("span",{style:{display:"inline-block","min-width":"120px"}},"亿",-1)),l(n,{number:31415926535}),t[6]||(t[6]=a(" → ")),l(n,{number:31415926535,"order-of-magnitude":[8]}),t[7]||(t[7]=s("br",null,null,-1)),t[8]||(t[8]=s("span",{style:{display:"inline-block","min-width":"120px"}},"亿、万",-1)),l(n,{number:31415926535}),t[9]||(t[9]=a(" → ")),l(n,{number:31415926535,"order-of-magnitude":[4,8]}),t[10]||(t[10]=s("br",null,null,-1)),t[11]||(t[11]=s("span",{style:{display:"inline-block","min-width":"120px"}},"亿、万",-1)),l(n,{number:31415926}),t[12]||(t[12]=a(" → ")),l(n,{number:31415926,"order-of-magnitude":[4,8]}),t[13]||(t[13]=s("br",null,null,-1)),t[14]||(t[14]=s("span",{style:{display:"inline-block","min-width":"120px"}},"亿、万",-1)),l(n,{number:3141}),t[15]||(t[15]=a(" → ")),l(n,{number:3141,"order-of-magnitude":[4,8]}),t[16]||(t[16]=s("br",null,null,-1)),t[17]||(t[17]=s("br",null,null,-1)),t[18]||(t[18]=a(" 【强制转换：原始值 31415926535】")),t[19]||(t[19]=s("br",null,null,-1)),l(n,{number:31415926535,"order-of-magnitude":1}),t[20]||(t[20]=s("br",null,null,-1)),l(n,{number:31415926535,"order-of-magnitude":2}),t[21]||(t[21]=s("br",null,null,-1)),l(n,{number:31415926535,"order-of-magnitude":3}),t[22]||(t[22]=s("br",null,null,-1)),l(n,{number:31415926535,"order-of-magnitude":4}),t[23]||(t[23]=s("br",null,null,-1)),l(n,{number:31415926535,"order-of-magnitude":5}),t[24]||(t[24]=s("br",null,null,-1)),l(n,{number:31415926535,"order-of-magnitude":6}),t[25]||(t[25]=s("br",null,null,-1)),l(n,{number:31415926535,"order-of-magnitude":7}),t[26]||(t[26]=s("br",null,null,-1)),l(n,{number:31415926535,"order-of-magnitude":8}),t[27]||(t[27]=s("br",null,null,-1)),l(n,{number:31415926535,"order-of-magnitude":9}),t[28]||(t[28]=s("br",null,null,-1)),l(n,{number:31415926535,"order-of-magnitude":10}),t[29]||(t[29]=s("br",null,null,-1)),l(n,{number:31415926535,"order-of-magnitude":11}),t[30]||(t[30]=s("br",null,null,-1)),l(n,{number:31415926535,"order-of-magnitude":12}),t[31]||(t[31]=s("br",null,null,-1)),l(n,{number:31415926535,"order-of-magnitude":13}),t[32]||(t[32]=s("br",null,null,-1))]),_:1})}const G=h(J,[["render",W]]),L={};function K(o,t){const n=d("formatted-value"),i=d("c-showcase-box");return r(),p(i,{path:"formatted-value/magnitude-decimals"},{default:u(()=>[t[0]||(t[0]=s("span",{style:{"font-size":"12px"}}," 定义：小数位在数量级达到「万」时保留2位，数量级达到「亿」时保留4位，默认保留0位。 ",-1)),t[1]||(t[1]=s("br",null,null,-1)),t[2]||(t[2]=s("br",null,null,-1)),t[3]||(t[3]=s("span",{style:{display:"inline-block","min-width":"240px"}}," 数值：3.14 ",-1)),l(n,{number:3.14,"order-of-magnitude":[4,8],"magnitude-decimals":{4:2,8:4}}),t[4]||(t[4]=s("span",{style:{opacity:"0.5","font-size":"12px","margin-left":"24px"}},"// 未定义 decimals，保留原始值",-1)),t[5]||(t[5]=s("br",null,null,-1)),t[6]||(t[6]=s("span",{style:{display:"inline-block","min-width":"240px"}}," 数值：3.14 ",-1)),l(n,{number:3.14,decimals:0,"order-of-magnitude":[4,8],"magnitude-decimals":{4:2,8:4}}),t[7]||(t[7]=s("span",{style:{opacity:"0.5","font-size":"12px","margin-left":"24px"}},"// 定义 decimals 为 0，在 magnitude-decimals 梯度覆盖以外的数量级，取默认的保留 0 位小数",-1)),t[8]||(t[8]=s("br",null,null,-1)),t[9]||(t[9]=s("span",{style:{display:"inline-block","min-width":"240px"}}," 数值：314159.26535 ",-1)),l(n,{number:314159.26535,"order-of-magnitude":[4,8],"magnitude-decimals":{4:2,8:4}}),t[10]||(t[10]=s("br",null,null,-1)),t[11]||(t[11]=s("span",{style:{display:"inline-block","min-width":"240px"}}," 数值：31415926535 ",-1)),l(n,{number:31415926535,"order-of-magnitude":[4,8],"magnitude-decimals":{4:2,8:4}}),t[12]||(t[12]=s("br",null,null,-1)),t[13]||(t[13]=s("span",{style:{display:"inline-block","min-width":"240px"}}," 数值：31415926535 ",-1)),l(n,{number:31415926535,"order-of-magnitude":[4,8,12],"magnitude-decimals":{4:2,8:2,12:2}}),t[14]||(t[14]=s("br",null,null,-1)),t[15]||(t[15]=s("span",{style:{display:"inline-block","min-width":"240px"}}," 数值：31415926535 ",-1)),l(n,{number:31415926535,"order-of-magnitude":[4,8],"magnitude-decimals":{4:1,5:2,6:3,7:4,8:5}}),t[16]||(t[16]=s("br",null,null,-1)),t[17]||(t[17]=s("span",{style:{display:"inline-block","min-width":"240px"}}," 数值：31415926535 ",-1)),l(n,{number:31415926535,"order-of-magnitude":[3,7],"magnitude-decimals":{4:1,5:2,6:3,7:4,8:5}}),t[18]||(t[18]=s("br",null,null,-1)),t[19]||(t[19]=s("span",{style:{display:"inline-block","min-width":"240px"}}," 数值：31415926535 ",-1)),l(n,{number:31415926535,"order-of-magnitude":[2,6],"magnitude-decimals":{4:1,5:2,6:3,7:4,8:5}}),t[20]||(t[20]=s("br",null,null,-1)),t[21]||(t[21]=s("span",{style:{display:"inline-block","min-width":"240px"}}," 数值：31415926535 ",-1)),l(n,{number:31415926535,"order-of-magnitude":[1,5],"magnitude-decimals":{4:1,5:2,6:3,7:4,8:5}}),t[22]||(t[22]=s("br",null,null,-1)),t[23]||(t[23]=s("span",{style:{display:"inline-block","min-width":"240px"}}," 数值：31415926535 ",-1)),l(n,{number:31415926535,"order-of-magnitude":[1,5],"magnitude-decimals":{6:1,7:2,8:3}}),t[24]||(t[24]=s("br",null,null,-1))]),_:1})}const Q=h(L,[["render",K]]),U={};function X(o,t){const n=d("formatted-value"),i=d("c-showcase-box");return r(),p(i,{path:"formatted-value/percent-sign"},{default:u(()=>[l(n,{number:3.1415926,"percent-sign":""}),t[0]||(t[0]=s("br",null,null,-1)),l(n,{number:67,"percent-sign":""})]),_:1})}const Y=h(U,[["render",X]]),Z={};function _(o,t){const n=d("formatted-value"),i=d("c-showcase-box");return r(),p(i,{path:"formatted-value/fallback"},{default:u(()=>[t[0]||(t[0]=a(" 默认： ")),t[1]||(t[1]=s("br",null,null,-1)),t[2]||(t[2]=s("br",null,null,-1)),l(n,{number:3.1415926}),t[3]||(t[3]=s("br",null,null,-1)),l(n,{number:""}),t[4]||(t[4]=s("br",null,null,-1)),l(n,{number:"-"}),t[5]||(t[5]=s("br",null,null,-1)),l(n,{number:null}),t[6]||(t[6]=s("br",null,null,-1)),l(n,{number:void 0}),t[7]||(t[7]=s("br",null,null,-1)),t[8]||(t[8]=s("br",null,null,-1)),t[9]||(t[9]=a(" 自定义： ")),t[10]||(t[10]=s("br",null,null,-1)),t[11]||(t[11]=s("br",null,null,-1)),l(n,{number:"",fallback:[e=>e==="","数据为空诶⊙﹏⊙|||"]},null,8,["fallback"])]),_:1})}const c=h(Z,[["render",_]]),tt=m({__name:"fallback-by",setup(o){function t(n){if(["","-","undefined","null"].includes(n))return"-";if(n==="***")return"***";if(n==="NaN")return"Computation Error"}return(n,i)=>{const e=d("formatted-value"),b=d("c-showcase-box");return r(),p(b,{path:"formatted-value/fallback-by"},{default:u(()=>[i[0]||(i[0]=a(" 默认： ")),i[1]||(i[1]=s("br",null,null,-1)),i[2]||(i[2]=s("br",null,null,-1)),l(e,{number:3.1415926}),i[3]||(i[3]=s("br",null,null,-1)),l(e,{number:""}),i[4]||(i[4]=s("br",null,null,-1)),l(e,{number:"-"}),i[5]||(i[5]=s("br",null,null,-1)),l(e,{number:null}),i[6]||(i[6]=s("br",null,null,-1)),l(e,{number:void 0}),i[7]||(i[7]=s("br",null,null,-1)),i[8]||(i[8]=s("br",null,null,-1)),i[9]||(i[9]=a(" 自定义： ")),i[10]||(i[10]=s("br",null,null,-1)),i[11]||(i[11]=s("br",null,null,-1)),l(e,{"fallback-by":t,number:3.1415926}),i[12]||(i[12]=s("br",null,null,-1)),l(e,{"fallback-by":t,number:""}),i[13]||(i[13]=s("br",null,null,-1)),l(e,{"fallback-by":t,number:"-"}),i[14]||(i[14]=s("br",null,null,-1)),l(e,{"fallback-by":t,number:null}),i[15]||(i[15]=s("br",null,null,-1)),l(e,{"fallback-by":t,number:void 0}),i[16]||(i[16]=s("br",null,null,-1)),l(e,{"fallback-by":t,number:"***"}),i[17]||(i[17]=s("br",null,null,-1)),l(e,{"fallback-by":t,number:"NaN"}),i[18]||(i[18]=s("br",null,null,-1))]),_:1})}}}),lt=JSON.parse('{"title":"formatted-value","description":"","frontmatter":{},"headers":[],"relativePath":"en/components/formatted-value.md","filePath":"en/components/formatted-value.md"}'),st={name:"en/components/formatted-value.md"},it=Object.assign(st,{setup(o){return(t,n)=>{const i=d("c-craft-badge-group");return r(),g("div",null,[n[0]||(n[0]=s("h1",{id:"formatted-value",tabindex:"-1"},[a("formatted-value "),s("a",{class:"header-anchor",href:"#formatted-value","aria-label":'Permalink to "formatted-value"'},"​")],-1)),n[1]||(n[1]=s("br",null,null,-1)),l(i,{readme:"https://github.com/Wolff-H/formatted-value/blob/master/README.md",github:"https://github.com/Wolff-H/formatted-value",npm:"https://npmjs.com/package/formatted-value"}),n[2]||(n[2]=s("p",null,"格式化的数值显示。",-1)),n[3]||(n[3]=s("h2",{id:"基础用法",tabindex:"-1"},[a("基础用法 "),s("a",{class:"header-anchor",href:"#基础用法","aria-label":'Permalink to "基础用法"'},"​")],-1)),n[4]||(n[4]=s("p",null,"通常地显示一个数值。",-1)),l(E),n[5]||(n[5]=s("h2",{id:"带方向的数值",tabindex:"-1"},[a("带方向的数值 "),s("a",{class:"header-anchor",href:"#带方向的数值","aria-label":'Permalink to "带方向的数值"'},"​")],-1)),n[6]||(n[6]=s("p",null,[a("使用 "),s("code",null,"directional"),a(" 属性来定义数值是否是有方向的。该属性接受一个 "),s("code",null,"Boolean"),a(" 值。")],-1)),n[7]||(n[7]=s("p",null,"数值的方向取自数值的实际值，默认红正绿负，其它情况置灰。你也可以覆盖使用自己的色彩方案。",-1)),l(F),n[8]||(n[8]=s("h2",{id:"总是显示正值的正号",tabindex:"-1"},[a("总是显示正值的正号 "),s("a",{class:"header-anchor",href:"#总是显示正值的正号","aria-label":'Permalink to "总是显示正值的正号"'},"​")],-1)),n[9]||(n[9]=s("p",null,"总是在值前显示正号（当数值是一个正值）。",-1)),n[10]||(n[10]=s("p",null,[a("使用 "),s("code",null,"positive-sign"),a(" 属性定义。该属性接受一个 "),s("code",null,"Boolean"),a(" 值。")],-1)),l(C),n[11]||(n[11]=s("h2",{id:"带正负号的向量",tabindex:"-1"},[a("带正负号的向量 "),s("a",{class:"header-anchor",href:"#带正负号的向量","aria-label":'Permalink to "带正负号的向量"'},"​")],-1)),n[12]||(n[12]=s("p",null,[a("同时开启 "),s("code",null,"directional"),a(" 和 "),s("code",null,"positive-sign"),a("。实现总是带正负号的向量值展示。")],-1)),l(q),n[13]||(n[13]=s("h2",{id:"不展示正负号",tabindex:"-1"},[a("不展示正负号 "),s("a",{class:"header-anchor",href:"#不展示正负号","aria-label":'Permalink to "不展示正负号"'},"​")],-1)),n[14]||(n[14]=s("p",null,[a("设置 "),s("code",null,"sign"),a(" 为 "),s("code",null,"false"),a(" 可以关闭正负号的展示，令数值的展现更加清爽。")],-1)),l(S),n[15]||(n[15]=s("h2",{id:"千分位",tabindex:"-1"},[a("千分位 "),s("a",{class:"header-anchor",href:"#千分位","aria-label":'Permalink to "千分位"'},"​")],-1)),n[16]||(n[16]=s("p",null,[a("开启 "),s("code",null,"thousands-separator"),a(" 将令数值作千分位分割格式展示。")],-1)),l(V),n[17]||(n[17]=s("h2",{id:"百分数",tabindex:"-1"},[a("百分数 "),s("a",{class:"header-anchor",href:"#百分数","aria-label":'Permalink to "百分数"'},"​")],-1)),n[18]||(n[18]=s("p",null,[a("开启 "),s("code",null,"percentage"),a(" 将数值表示为百分数。")],-1)),n[19]||(n[19]=s("p",null,"需注意，当数值格式化的选项是「良定义（well-formed）」的（也即，启用百分数的同时显式地定义了小数位），则组件将实际计算百分数并保留到给定的小数位；否则，数值将被视为已处理，仅作直接添加百分符号。",-1)),n[20]||(n[20]=s("p",null,[a("在使用百分数时，你应当总是提供良定义的选项；如果只是想简单后缀附加一个百分符号，请使用「百分号 "),s("code",null,"percent-sign"),a("」。")],-1)),n[21]||(n[21]=s("blockquote",null,[s("p",null,"例如，在对原始值作乘法运算后，可能遭遇浮点精度问题，如 n.0000000000001 的结果，因此良好的定义必须指定保留小数。")],-1)),l(I),n[22]||(n[22]=k('<h2 id="小数精度" tabindex="-1">小数精度 <a class="header-anchor" href="#小数精度" aria-label="Permalink to &quot;小数精度&quot;">​</a></h2><p>设置 <code>decimals</code> 来规定数值的小数精度。</p><p>小数精度定义有简写与详写两种方式。</p><p>简写时，传入一个 <code>number</code> 以约束数值要保留的小数位。默认以 Math.round 方法取舍精度。</p><p>详写时，传入一个 <code>[dicimals: number, method: &#39;round&#39;|&#39;floor&#39;|&#39;ceil&#39;]</code> 元组，同时指定保留小数位和精度取舍算法。</p>',5)),l(O),n[23]||(n[23]=s("h2",{id:"title",tabindex:"-1"},[a("title "),s("a",{class:"header-anchor",href:"#title","aria-label":'Permalink to "title"'},"​")],-1)),n[24]||(n[24]=s("p",null,[a("开启 "),s("code",null,"titled"),a(" 为数值元素添加 "),s("code",null,"title"),a(" 特性。")],-1)),n[25]||(n[25]=s("p",null,"此时，数值渲染 html 元素将带上 title 特性，其值为该数值未经任何加工时的原始值。",-1)),n[26]||(n[26]=s("p",null,"通常用于提供原始值可知性，比如因保留有效数位或换算百分比而丢失了部分信息的场景。",-1)),l(H),n[27]||(n[27]=k(`<h2 id="数量级换算" tabindex="-1">数量级换算 <a class="header-anchor" href="#数量级换算" aria-label="Permalink to &quot;数量级换算&quot;">​</a></h2><p>传入 <code>order-of-magnitude</code> 为 N 来预处理数值到相应数量级（十、百、千、万等中文表示）。N 是落在区间 <code>[1, 13]</code> 上的整数，表示 10 的 N 次幂。</p><p>当传入单个数值 <code>N</code>，组件将强制转换数值到该数量级。</p><p>当传入一个数组 <code>[...{n | n ∈ N}]</code>，组件将按从大到小的顺序依次尝试数组中的幂数，如果数值不满足任何提供的数量级，则转换失败，不产生任何效果。</p><h5 id="全部可用的幂数和数量级关系如下" tabindex="-1">全部可用的幂数和数量级关系如下 <a class="header-anchor" href="#全部可用的幂数和数量级关系如下" aria-label="Permalink to &quot;全部可用的幂数和数量级关系如下&quot;">​</a></h5><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">0.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">1.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 十</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">2.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 百</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">3.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 千</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">4.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 万</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">5.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 十万</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">6.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 百万</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">7.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 千万</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">8.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 亿</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">9.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 十亿</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">10.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 百亿</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">11.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 千亿</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">12.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 万亿</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">13.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 兆</span></span></code></pre></div><h5 id="降级转换的梯度示例" tabindex="-1">降级转换的梯度示例 <a class="header-anchor" href="#降级转换的梯度示例" aria-label="Permalink to &quot;降级转换的梯度示例&quot;">​</a></h5><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">formatted-value</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> :number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;31415926535&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> :order-of-magnitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[4]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><table tabindex="0"><thead><tr><th>整数部分位数</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>...</th></tr></thead><tbody><tr><td>转换到数量级</td><td></td><td></td><td></td><td></td><td>万</td><td>万</td><td>万</td><td>万</td><td>万</td><td>万</td><td>万</td><td>万</td><td>万</td><td>万</td><td>万</td></tr></tbody></table><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">formatted-value</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> :number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;31415926535&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> :order-of-magnitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[4, 8]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><table tabindex="0"><thead><tr><th>整数部分位数</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>...</th></tr></thead><tbody><tr><td>转换到数量级</td><td></td><td></td><td></td><td></td><td>万</td><td>万</td><td>万</td><td>万</td><td>亿</td><td>亿</td><td>亿</td><td>亿</td><td>亿</td><td>亿</td><td>亿</td></tr></tbody></table><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">formatted-value</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> :number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;31415926535&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> :order-of-magnitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[3, 6, 9]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><table tabindex="0"><thead><tr><th>整数部分位数</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>...</th></tr></thead><tbody><tr><td>转换到数量级</td><td></td><td></td><td></td><td>千</td><td>千</td><td>千</td><td>百万</td><td>百万</td><td>百万</td><td>十亿</td><td>十亿</td><td>十亿</td><td>十亿</td><td>十亿</td><td>十亿</td></tr></tbody></table>`,13)),l(G),n[28]||(n[28]=k(`<h2 id="数量级保留小数" tabindex="-1">数量级保留小数 <a class="header-anchor" href="#数量级保留小数" aria-label="Permalink to &quot;数量级保留小数&quot;">​</a></h2><p>传入 <code>magnitude-decimals</code> 一个字典，可以指定当数值超过特定数量级后，采用的保留小数位方法。</p><p>字典类型为 <code>Record&lt;number, number | [bit: number, method: &#39;floor&#39; | &#39;round&#39; | &#39;ceil&#39; | undefined]&gt;</code>。</p><p>如果未定义字典，则使用默认小数 <code>decimals</code> 的定义；如果未定义默认小数位保留，则使用原始小数。</p><h5 id="降级转换的梯度示例-1" tabindex="-1">降级转换的梯度示例 <a class="header-anchor" href="#降级转换的梯度示例-1" aria-label="Permalink to &quot;降级转换的梯度示例&quot;">​</a></h5><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">formatted-value</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  :number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;31415926535&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  :order-of-magnitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[4]&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  :magnitude-decimals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{ 4: 2 }&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre></div><table tabindex="0"><thead><tr><th>整数部分位数</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>...</th></tr></thead><tbody><tr><td>转换到数量级</td><td></td><td></td><td></td><td></td><td>万</td><td>万</td><td>万</td><td>万</td><td>万</td><td>万</td><td>万</td><td>万</td><td>万</td><td>万</td><td>万</td></tr><tr><td>保留到小数位</td><td></td><td></td><td></td><td></td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td></tr></tbody></table><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">formatted-value</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  :number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;31415926535&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  :order-of-magnitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[4, 8]&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  :magnitude-decimals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{ 4: 2, 8: 4 }&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre></div><table tabindex="0"><thead><tr><th>整数部分位数</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>...</th></tr></thead><tbody><tr><td>转换到数量级</td><td></td><td></td><td></td><td></td><td>万</td><td>万</td><td>万</td><td>万</td><td>亿</td><td>亿</td><td>亿</td><td>亿</td><td>亿</td><td>亿</td><td>亿</td></tr><tr><td>保留到小数位</td><td></td><td></td><td></td><td></td><td>2</td><td>2</td><td>2</td><td>2</td><td>4</td><td>4</td><td>4</td><td>4</td><td>4</td><td>4</td><td>4</td></tr></tbody></table><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">formatted-value</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  :number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;31415926535&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  :decimals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  :order-of-magnitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[4, 8]&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  :magnitude-decimals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{ 4: 2, 8: 4 }&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre></div><table tabindex="0"><thead><tr><th>整数部分位数</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th><th>13</th><th>...</th></tr></thead><tbody><tr><td>转换到数量级</td><td></td><td></td><td></td><td></td><td>万</td><td>万</td><td>万</td><td>万</td><td>亿</td><td>亿</td><td>亿</td><td>亿</td><td>亿</td><td>亿</td><td>亿</td></tr><tr><td>保留到小数位</td><td>3</td><td>3</td><td>3</td><td>3</td><td>2</td><td>2</td><td>2</td><td>2</td><td>4</td><td>4</td><td>4</td><td>4</td><td>4</td><td>4</td><td>4</td></tr></tbody></table>`,11)),l(Q),n[29]||(n[29]=s("h2",{id:"百分号",tabindex:"-1"},[a("百分号 "),s("a",{class:"header-anchor",href:"#百分号","aria-label":'Permalink to "百分号"'},"​")],-1)),n[30]||(n[30]=s("p",null,[a("开启 "),s("code",null,"percent-sign"),a(" 在数值后加上百分号。使用此项仅会添加符号，不作计算。")],-1)),l(Y),n[31]||(n[31]=k('<h2 id="百分号空格" tabindex="-1">百分号空格 <a class="header-anchor" href="#百分号空格" aria-label="Permalink to &quot;百分号空格&quot;">​</a></h2><p>在添加百分号时，组件默认在数值与百分符号间添加一个英文空格，可以传入 <code>percent-sign-space</code> 为 false 而不添加空格。</p><h2 id="兜底方法-断言" tabindex="-1">兜底方法（断言） <a class="header-anchor" href="#兜底方法-断言" aria-label="Permalink to &quot;兜底方法（断言）&quot;">​</a></h2><p>理想情况下，传入 formatted-value 的 number 属性应当是一个 <code>number</code> 或 <code>numberstring</code>，然而，如果在运行时取得其他值，可以通过 fallback 方法兜底转换输出。</p><p>内置默认的兜底方法将转换 <code>&#39;&#39;</code>、<code>&#39;-&#39;</code>、<code>null</code>、<code>undefined</code> 为短横线输出。</p><p>fallback 参数类型为 <code>() =&gt; [tester: (numstr: string) =&gt; boolean, output: string]</code>。</p>',6)),l(c),n[32]||(n[32]=s("h2",{id:"兜底方法-函数",tabindex:"-1"},[a("兜底方法（函数） "),s("a",{class:"header-anchor",href:"#兜底方法-函数","aria-label":'Permalink to "兜底方法（函数）"'},"​")],-1)),n[33]||(n[33]=s("p",null,[a("定义 fallbackBy 函数来兜底输入。fallbackBy 的类型是 "),s("code",null,"(number: string) => string | undefined | void"),a("。fallbackBy 将覆盖 fallback 定义。")],-1)),n[34]||(n[34]=s("p",null,"相较于 fallback，前者是一个「断言」，而 fallbackBy 允许定义一个完整函数，能够支持更复杂的兜底处理。",-1)),n[35]||(n[35]=s("p",null,[a("然而，在绝大部分场景下你其实"),s("strong",null,"不应该"),a("使用到 fallbackBy，因为复杂的数据兜底处理原则上"),s("strong",null,"应该"),a("放在 formatted-value 外部，而不是其内。 当然，如果你确实想将处理结果渲染在 formatted-value 内，那么使用这个 api 是合适的。")],-1)),l(tt),n[36]||(n[36]=k(`<h2 id="formattedvalue-属性" tabindex="-1">FormattedValue 属性 <a class="header-anchor" href="#formattedvalue-属性" aria-label="Permalink to &quot;FormattedValue 属性&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>number</td><td>数值</td><td>number / string</td><td>—</td><td>—</td></tr><tr><td>sign</td><td>是否显示正负号</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>positive-sign</td><td>是否总是显示正值的正号</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>percentage</td><td>百分数</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>thousands-separator</td><td>是否显示千分位分隔符</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>directional</td><td>是否标记数值具有方向性</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>direction</td><td>向量数值的方向</td><td>string</td><td>down / &#39;&#39; / up</td><td>&#39;&#39;</td></tr><tr><td>decimals</td><td>保留小数位</td><td>number / [bit, method]</td><td>需指定精度算法时，传入元组 [bit: number, method: &#39;floor&#39; | &#39;round&#39; | &#39;ceil&#39; | undefined]</td><td>—</td></tr><tr><td>titled</td><td>是否添加 title 属性（将被赋为数值原始值）</td><td>boolean</td><td>—</td><td>—</td></tr><tr><td>order-of-magnitude</td><td>数量级换算</td><td>number / number[]</td><td>—</td><td>—</td></tr><tr><td>magnitude-decimals</td><td>数量级保留小数</td><td>Record&lt;number, number | [bit: number, method: &#39;floor&#39; | &#39;round&#39; | &#39;ceil&#39; | undefined]&gt;</td><td>—</td><td>—</td></tr><tr><td>percent-sign</td><td>百分号</td><td>boolean</td><td>—</td><td>—</td></tr><tr><td>percent-sign-space</td><td>百分号空格</td><td>boolean</td><td>—</td><td>—</td></tr><tr><td>fallback</td><td>兜底方法（断言）</td><td>[tester: (numstr: string) =&gt; boolean, output: string]</td><td>—</td><td>—</td></tr><tr><td>fallback-by</td><td>兜底方法（函数）</td><td>(number: string) =&gt; string</td><td>undefined</td><td>void</td></tr></tbody></table><h2 id="formattedvalue-对外暴露的属性-方法" tabindex="-1">FormattedValue 对外暴露的属性/方法 <a class="header-anchor" href="#formattedvalue-对外暴露的属性-方法" aria-label="Permalink to &quot;FormattedValue 对外暴露的属性/方法&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>ref</td><td>顶层 span 元素</td><td><code>Ref&lt;HTMLSpanElement&gt;</code></td><td>—</td><td>—</td></tr><tr><td>composition</td><td>格式化处理后的构造对象</td><td><code>FormattedValueComposition</code></td><td>—</td><td>—</td></tr><tr><td>directionClass</td><td>向量类</td><td><code>DirectionClass</code></td><td>—</td><td>—</td></tr></tbody></table><h2 id="toformattedvalue-纯字串输出的数值格式化" tabindex="-1">toFormattedValue - 纯字串输出的数值格式化 <a class="header-anchor" href="#toformattedvalue-纯字串输出的数值格式化" aria-label="Permalink to &quot;toFormattedValue - 纯字串输出的数值格式化&quot;">​</a></h2><p>格式化数值同时提供一个纯字串输出的版本。</p><h4 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h4><p>toFormattedValue 接受一个数值，按给定选项规则产生一个格式化的结果字符串。</p><p>toFormattedValue 格式化的选项规则、类型定义、内部处理逻辑与 formatted-value 完全同构。</p><p>特别地，可以简写 number 属性为参数，形如 <code>toFormattedValue(number, props)</code>。</p><h4 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { toFormattedValue } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;formatted-value&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> value1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> toFormattedValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  number: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">31415926.535</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  thousandsSeparator: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// value1 = &#39;31,415,926.535&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> value2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> toFormattedValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  number: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.1415926</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  decimals: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  percentage: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  positiveSign: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// value2 = &#39;+314.1593 %&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 简写 number 参数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> value2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> toFormattedValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.1415926</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  decimals: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  percentage: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  positiveSign: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// value3 = &#39;+314.1593 %&#39;</span></span></code></pre></div>`,12))])}}});export{lt as __pageData,it as default};
